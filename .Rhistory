pie(z,
labels = paste0((format(round(z, 2), nsmall = 2)), '%'),
main = "Break",
border = TRUE
)
pie(z,
labels = paste0(appts$Status,(format(round(z, 2), nsmall = 2)), '%'),
main = "Break",
border = TRUE
)
pie(z,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Break",
border = TRUE
)
pie(z,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Break",
col = rainbow(2),
border = TRUE
)
# pie chart of sms reminders sent
pie(table(appts$Sms_Reminder) * 100 / nrow(appts),
col = rainbow(12),
radius = 1)
mystats(appts$Diabetes)
pie(z,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Break",
col = rainbow(2),
border = TRUE
)
pie(z,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of Appointment Status",
col = rainbow(2),
border = TRUE
)
## Status
mystats(appts$Status)
## Status
describe(appts$Status)
## Status
summary(appts$Status)
## Status
print("Number of Patients who Showed Up versus who Missed:")
print(summary(appts$Status))
table(appts$Status)
# creating a proportion table in
z <- prop.table(table(appts$Status)) * 100
# display a pie chart of the Status feature
pie(z,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of Appointment Status",
col = rainbow(2),
border = TRUE
)
print(mystats(appts$Sms_Reminder))
return(
c(
n = n,
nmiss = nmiss,
outlier_flag = outlier_flag,
mean = m,
med = med,
stdev = s,
min = min,
# p1 = p1,
# p5 = p5,
# p10 = p10,
q1 = q1,
q2 = q2,
q3 = q3,
# p90 = p90,
# p95 = p95,
# p99 = p99,
max = max,
LC = LC,
UC = UC
)
)
## user written function for creating descriptive statistics
mystats <- function(x) {
nmiss <- sum(is.na(x))
a <- x[!is.na(x)]
med <- median(x)
m <- mean(a)
n <- length(a)
s <- sd(a)
min <- min(a)
# p1 <- quantile(a, 0.01)
# p5 <- quantile(a, 0.05)
# p10 <- quantile(a, 0.10)
q1 <- quantile(a, 0.25)
q2 <- quantile(a, 0.5)
q3 <- quantile(a, 0.75)
# p90 <- quantile(a, 0.90)
# p95 <- quantile(a, 0.95)
# p99 <- quantile(a, 0.99)
max <- max(a)
UC <- m + 3 * s  # upper fence
LC <- m - 3 * s  # lower fence
outlier_flag <- max > UC | min < LC
return(
c(
n = n,
nmiss = nmiss,
outlier_flag = outlier_flag,
mean = m,
med = med,
stdev = s,
min = min,
# p1 = p1,
# p5 = p5,
# p10 = p10,
q1 = q1,
q2 = q2,
q3 = q3,
# p90 = p90,
# p95 = p95,
# p99 = p99,
max = max,
LC = LC,
UC = UC
)
)
}
print(mystats(appts$Sms_Reminder))
median(appts$Sms_Reminder)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
barchart(table(appts$Sms_Reminder) * 100 / nrow(appts),
col = rainbow(12),
radius = 1)
rm(z)
require(ggplot2)
require(ggmosaic)
require(tidyverse)
require(caret)
require(stats)
require(dplyr)
# prevent display of numbers in scientific notation
options(scipen = 999)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
barchart(table(appts$Sms_Reminder) * 100 / nrow(appts),
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%')
col = rainbow(12)
)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
barchart(table(appts$Sms_Reminder) * 100 / nrow(appts),
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
col = rainbow(12)
)
# display a pie chart of the Status feature
z <- prop.table(table(appts$Status)) * 100
pie(prop.table(table(appts$Status)) * 100,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of Appointment Status",
col = rainbow(2),
border = TRUE
)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
z <- prop.table(table(appts$Sms_Reminder)) * 100
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent"
col = rainbow(12)
)
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12)
)
?barchart
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
xlab = "Frequency in %",
yabl = "Number of SMS Messages Sent"
)
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May","Jun","Jul")
regions <- c("East","West","North")
# Create the matrix of the values.
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow = 3, ncol = 5, byrow = TRUE)
# Give the chart file a name
png(file = "barchart_stacked.png")
# Create the bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
# Add the legend to the chart
legend("topleft", regions, cex = 1.3, fill = colors)
# Save the file
dev.off()
rm(c(values, colors, regions, months))
rm(values)
rm(c(Values, colors, regions, months))
rm(Values)
rm(colors)
rm(months)
rm(regions)
counts <- table(appts$Sms_Reminder)
counts <- pro.table(table(appts$Sms_Reminder)) * 100
counts <- prop.table(table(appts$Sms_Reminder)) * 100
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 3,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 3,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 0,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 1,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 2,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 4,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 5,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
labels = z,
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 10,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
z
labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%')
labels
labels = paste0(z, ': ', (format(round(z, 2), nsmall = 2)), '%')
labels
unique(appts$Sms_Reminder)
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%')
labels
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 10,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%')
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
text = z,
pos = 10,
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(12),
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
# display a pie chart of the Status feature
z <- prop.table(table(appts$Status)) * 100
pie(prop.table(table(appts$Status)) * 100,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of Appointment Status",
col = rainbow(2),
border = TRUE
)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
z <- prop.table(table(appts$Sms_Reminder)) * 100
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(3),
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
pie(prop.table(table(appts$Status)) * 100,
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of Appointment Status",
col = rainbow(5),
border = TRUE
)
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(5),
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
print(table(appts$Sms_Reminder))
# SMS_Reminders
print("-----------------------------------")
print("Breakdown of SMS Reminders")
print(mystats(appts$Sms_Reminder))
print(table(appts$Sms_Reminder))
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
z <- prop.table(table(appts$Sms_Reminder)) * 100
barchart(z,
#labels = z,
labels = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# labels = paste0(appts$Sms_Reminder, ': ', (format(round(z, 2), nsmall = 2)), '%'),
main = "Breakdown of SMS Reminders Sent",
col = rainbow(5),
xlab = "Frequency in %",
ylab = "Number of SMS Messages Sent"
)
text(x= b, y=counts,pos = 3, label = counts, cex = 0.8, col = "red")
b <- barplot(counts, main= "number of yes/no", xlab = "response", ylab = "number of occurrences", ylim=c(0,4)
b <- barplot(counts, main= "number of yes/no", xlab = "response", ylab = "number of occurrences", ylim=c(0,4),
text(x= b, y=counts,pos = 3, label = counts, cex = 0.8, col = "red"))
# display a pie chart of the Status feature
z <- prop.table(table(appts$Status)) * 100
labels = paste0(appts$Status, ': ', (format(round(z, 2), nsmall = 2)), '%')
labels
HOLD <- matrix(c(0.80, 0.70, 0.70, 0.65, 0.56, 0.56, 0.78, 0.54, 0.40, 0.76, 0.23, 0.45), ncol=6, nrow=2)
colnames(HOLD) <- c("Infolettre", "Promotion", "Abonne", "Comédie", "Drame", "Suspense")
rownames(HOLD) <- c("D.T.", "F.T.")
HOLD
SEQUENTIAL <- brewer.pal(2, "PuBu")
library("RColorBrewer")
SEQUENTIAL <- brewer.pal(2, "PuBu")
par(mfrow=c(1,3))
barplot(HOLD[,1] * 100, main="Infolettre", ylab="%", ylim=c(0, 100), las=1,  col=SEQUENTIAL)
barplot(HOLD[,2] * 100, main="Promotion", ylab="%", ylim=c(0,100), las=1, col=SEQUENTIAL)
barplot(HOLD[,3] * 100, main="Abonne", ylab="%", ylim=c(0,100), las=1, col=SEQUENTIAL)
BP = barplot(HOLD[,1] * 100, main="Infolettre", ylab="%", ylim=c(0, 100), las=1,  col=SEQUENTIAL)
text(BP, HOLD[,1]*100, labels=HOLD[,1]*100, pos=3)
BP = barplot(HOLD[,2] * 100, main="Promotion", ylab="%", ylim=c(0,100), las=1, col=SEQUENTIAL)
text(BP, HOLD[,2]*100, labels=HOLD[,2]*100, pos=3)
BP = barplot(HOLD[,3] * 100, main="Abonne", ylab="%", ylim=c(0,100), las=1, col=SEQUENTIAL)
text(BP, HOLD[,3]*100, labels=HOLD[,3]*100, pos=3)
BP = barplot(z, main="Infolettre", ylab="%", ylim=c(0, 100), las=1,  col=SEQUENTIAL)
## Interestingly enough, the median "med" of this variable is at 1, while the
## mean is at 0.57417
# pie chart of sms reminders sent
z <- prop.table(table(appts$Sms_Reminder)) * 100
BP = barplot(z, main="Infolettre", ylab="%", ylim=c(0, 100), las=1,  col=SEQUENTIAL)
text(BP, z, pos=3)
Z
z
text(BP, label = z, pos=3)
text(BP, label = z, pos=3, cex = 0.8)
BP = barplot(z, main="Infolettre", ylab="%", ylim=c(0, 100), las=1,  col=SEQUENTIAL)
text(BP, label = z, pos=3, cex = 0.8)
text(BP, label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'), pos=3, cex = 0.8)
par(mfrow=c(1,1))
BP = barchart(z,
main = "Breakdown of SMS Reminders Sent",
ylab = "%",
ylim = c(0, 100),
las = 1,
col = SEQUENTIAL)
text(BP,
label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
pos = 1,
cex = 0.8)
BP = barchart(z,
main = "Breakdown of SMS Reminders Sent",
ylab = "%",
ylim = c(0, 100),
las = 1,
col = SEQUENTIAL)
text(BP,
label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
pos = 1,
cex = 0.8)
text(BP,
# label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
label = z,
pos = 1,
cex = 0.8)
BP = barplot(z,
main = "Breakdown of SMS Reminders Sent",
ylab = "%",
ylim = c(0, 100),
las = 1,
col = SEQUENTIAL)
text(BP,
# label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
label = z,
pos = 1,
cex = 0.8)
text(BP,
# label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
label = z,
pos = 3,
cex = 0.8)
text(BP,
label = paste0(unique(appts$Sms_Reminder), ': ', (format(round(z, 2), nsmall = 2)), '%'),
# label = z,
pos = 3,
cex = 0.8)
BP = barplot(z,
main = "Breakdown of SMS Reminders Sent",
ylab = "%",
ylim = c(0, 100),
las = 1,
col = SEQUENTIAL)
barchart(status ~ Sms_Reminder, data = appts)
barchart(Status ~ Sms_Reminder, data = appts)
barchart(Sms_Reminder ~ Sms_Remindef, data = appts)
barchart(Sms_Reminder ~ Sms_Reminder, data = appts)
barchart(Sms_Reminder ~ Status, data = appts)
barplot(Sms_Reminder ~ Status, data = appts)
barplot(Sms_Reminder, data = appts, group = Sms_Reminder)
barplot(Sms_Reminder, data = appts, group = Status)
barplot(appts$Sms_Reminder, data = appts, group = appts$Status)
barchart(appts$Sms_Reminder ~ appts$Status)
require(plotly)
